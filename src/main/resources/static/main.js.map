{"version":3,"sources":["./src/app/models/category.enum.ts","./src/app/services/customer.service.ts","./src/app/components/customer-details/customer-details.component.ts","./src/app/components/customer-details/customer-details.component.html","./src/app/models/coupon.ts","./src/app/services/admin.service.ts","./src/app/components/update-company/update-company.component.ts","./src/app/components/update-company/update-company.component.html","./src/environments/environment.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/services/login.service.ts","./src/app/components/not-found/not-found.component.ts","./src/app/components/not-found/not-found.component.html","./src/app/components/company-details/company-details.component.ts","./src/app/components/company-details/company-details.component.html","./src/app/components/coupon-display/coupon-display.component.ts","./src/app/components/coupon-display/coupon-display.component.html","./src/app/models/company.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/user-details/user-details.component.ts","./src/app/components/user-details/user-details.component.html","./src/app/components/image-dialog/image-dialog.component.ts","./src/app/components/image-dialog/image-dialog.component.html","./src/app/components/customer/customer.component.ts","./src/app/components/customer/customer.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/app.module.ts","./src/app/services/company.service.ts","./src/app/components/admin/admin.component.ts","./src/app/components/admin/admin.component.html","./src/app/error-handler.interceptor.ts","./src/app/models/customer.ts","./src/app/components/toolbar/toolbar.component.html","./src/app/components/toolbar/toolbar.component.ts","./src/app/components/company/company.component.ts","./src/app/components/company/company.component.html","./src/app/app-routing.module.ts","./src/app/components/update-customer/update-customer.component.ts","./src/app/components/update-customer/update-customer.component.html","./src/app/components/company/update-coupon2/update-coupon2.component.ts","./src/app/components/company/update-coupon2/update-coupon2.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export enum Category {\n\n    Spa=\"Spa\",Food=\"Food\",Vacation=\"Vacation\",Electronics=\"Electronics\",Clothes=\"Clothes\",Shoes=\"Shoes\",Restaurants=\"Restaurants\"\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Coupon } from '../models/coupon';\nimport { Category } from '../models/category.enum';\nimport { Customer } from '../models/customer';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerService {\n\n  constructor(private client:HttpClient) { }\n\n  purchaseCoupon(id:number){\n     return this.client.get(\"http://localhost:8080/customer/purchaseCoupon/\"+id+\"/\"+sessionStorage.getItem('userId'),{responseType:'text'});\n  }\n\n  getAllCoupons(){\n    return this.client.get<Coupon[]>(\"http://localhost:8080/customer/getAllCoupons/\"+sessionStorage.getItem('userId'));\n  }\n\n  getCustomerCoupons(){\n    return this.client.get<Coupon[]>(\"http://localhost:8080/customer/getCustomerCoupons/\"+sessionStorage.getItem('userId'));\n  }\n\n  getCouponsByCat(cat:Category){\n    return this.client.get<Coupon[]>(\"http://localhost:8080/customer/getCouponsByCat/\"+cat+\"/\"+sessionStorage.getItem('userId'));\n  }\n\n  getCouponsByPrice(price:number){\n    return this.client.get<Coupon[]>(\"http://localhost:8080/customer/getCouponsByPrice/\"+price+\"/\"+sessionStorage.getItem('userId'));\n  }\n\n  getCustomerDetails(){\n    return this.client.get<Customer>(\"http://localhost:8080/customer/getCustomerDetails/\"+sessionStorage.getItem('userId'));\n   }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { CustomerService } from 'src/app/services/customer.service';\nimport { Customer } from 'src/app/models/customer';\n\n@Component({\n  selector: 'app-customer-details',\n  templateUrl: './customer-details.component.html',\n  styleUrls: ['./customer-details.component.css']\n})\nexport class CustomerDetailsComponent implements OnInit {\n\n  customer:Customer;\n\n  constructor(private service:CustomerService) { }\n\n  ngOnInit(): void {\n    this.service.getCustomerDetails().subscribe((res)=>{\n      this.customer = res;\n      console.log(res);\n    },(err)=>{\n      alert(err.error);\n      console.log(err.error);\n    })\n  }\n\n}\n","<div>\n    <h1>Customer Details</h1>\n    <span>Name: {{customer.firstName}} {{customer.lastName}}</span>\n    <span>Email: {{customer.email}}</span>\n    <span>Password: {{customer.password}}</span>\n</div>\n","import { Company } from './company';\nimport { Category } from './category.enum';\n\nexport class Coupon {\n\n    constructor(\n    public id :number,\n    public title : string,\n    public category : Category,\n    public description : string,\n    public price : number,\n    public company : Company,\n    public startDate : Date,\n    public endDate : Date,\n    public amount : number,\n    public image : string,\n    ){}\n    \n    \n    public get _category() : Category {\n        return this.category;\n    }\n    public set _category(category : Category) {\n        this.category = category;\n    }\n    \n    public get _price() : number {\n        return this.price;\n    }\n    public set _price(price : number) {\n        this.price = price;\n    }\n    \n    public get _image() : string {\n        return this.image;\n     } \n    public set _image(image : string) {\n        this.image = image;\n    }\n    \n    public get _amount() : number {\n        return this.amount;\n    }\n    public set _amount(amount : number) {\n        this.amount = amount;\n    }\n    \n    public get _endDate() : Date {\n        return this.endDate;\n    }\n    public set _endDate(endDate : Date) {\n        this.endDate = endDate;\n    }\n    \n    public get _startDate() : Date {\n        return this.startDate;\n    }\n    public set _startDate(startDate : Date) {\n        this.startDate = startDate;\n    }\n    \n    public get _description() : string {\n        return this.description;\n    }\n    public set _description(description : string) {\n        this.description = description;\n    }\n    \n    public get _title() : string {\n        return this.title;\n    }\n    public set _title(title : string) {\n        this.title = title;\n    }\n    \n    public get _company() : Company {\n        return this.company;\n    }\n    public set _company(company : Company) {\n        this.company = company;\n    }\n    \n    public get _id() :number {\n        return this.id;\n    }\n    public set _id(id :number) {\n        this.id = id;\n    }\n    \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Company } from '../models/company';\nimport { Customer } from '../models/customer';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n\n  constructor(private client: HttpClient) { }\n\n  addCompany(company: Company) {\n    return this.client.post(\"http://localhost:8080/admin/addCompany/\" + sessionStorage.getItem('userId'), company,{responseType:'text'});\n  }\n\n  updateCompany(company: Company) {\n    //is it post or put??\n    return this.client.put(\"http://localhost:8080/admin/updateCompany/\" + sessionStorage.getItem('userId'), company,{responseType:'text'});\n  }\n\n  deleteCompany(id: number) {\n    return this.client.delete(\"http://localhost:8080/admin/deleteCompany/\" + id + \"/\" + sessionStorage.getItem('userId'), { responseType: 'text' });\n  }\n\n  getAllCompanies() {\n    return this.client.get<Company[]>(\"http://localhost:8080/admin/getAllCompanies/\" + sessionStorage.getItem('userId'));\n  }\n\n  getCompany(id: number) {\n    return this.client.get<Company>(\"http://localhost:8080/admin/getOneCompany/\" + id + \"/\" + sessionStorage.getItem('userId'));\n  }\n\n  getCompanyByEmail(email: string) {\n    return this.client.get<Company>(\"http://localhost:8080/admin/getCompanyByEmail/\" + email + \"/\" + sessionStorage.getItem('userId'));\n  }\n\n  addCustomer(customer: Customer) {\n    return this.client.post(\"http://localhost:8080/admin/addCustomer/\" + sessionStorage.getItem('userId'), customer,{responseType:'text'});\n  }\n\n  updateCustomer(customer: Customer) {\n    return this.client.put(\"http://localhost:8080/admin/updateCustomer/\" + sessionStorage.getItem('userId'), customer,{responseType:'text'});\n  }\n\n  deleteCustomer(id: number,) {\n    return this.client.delete(\"http://localhost:8080/admin/deleteCustomer/\" + id + \"/\" + sessionStorage.getItem('userId'), { responseType: 'text' });\n  }\n\n  getAllCustomers() {\n    return this.client.get<Customer[]>(\"http://localhost:8080/admin/getAllCustomers/\" + sessionStorage.getItem('userId'));\n  }\n\n  getCustomer(id: number) {\n    return this.client.get<Customer>(\"http://localhost:8080/admin/getOneCustomer/\" + id + \"/\" + sessionStorage.getItem('userId'));\n  }\n\n  getCustomerByEmail(email: string) {\n    return this.client.get<Customer>(\"http://localhost:8080/admin/getCustomerByEmail/\" + email + \"/\" + sessionStorage.getItem('userId'));\n  }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { Company } from 'src/app/models/company';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { AdminService } from 'src/app/services/admin.service';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-update-company',\n  templateUrl: './update-company.component.html',\n  styleUrls: ['./update-company.component.css']\n})\nexport class UpdateCompanyComponent implements OnInit {\n\n  company:Company;\n\n  updateCompanyForm:FormGroup;\n\n  messageForUser:string;\n\n  constructor(private dialogRef: MatDialogRef<UpdateCompanyComponent>,\n    @Inject(MAT_DIALOG_DATA) data,private fb:FormBuilder, private service:AdminService, private snack:MatSnackBar) {this.company = data.dataToSend }\n\n  ngOnInit(): void {\n    this.updateCompanyForm =this.fb.group({\n      email:[this.company.email,[Validators.required,Validators.email]],\n      password: [this.company.password,Validators.required]\n    });\n  }\n\n   \n    updateCompany() {\n      let company = new Company(this.company.id,this.company.name,this.updateCompanyForm.controls['password'].value,\n      this.updateCompanyForm.controls['email'].value,this.company.coupons);\n      this.service.updateCompany(company).subscribe((res) => {\n        this.messageForUser = res;\n        this.showSnack();\n        this.dialogRef.close(company);\n      }, (err) => {\n        alert(err.error);\n      });\n    }\n\n    \n  showSnack() {\n    let snackRef = this.snack.open(this.messageForUser, \"close\", { duration: 2000 });\n    snackRef.onAction().subscribe(() => {\n      this.snack.dismiss();\n    })\n  }\n\n}\n","<div>\n    <h2>Update a Company - {{company.name}}</h2>\n    <form [formGroup]=\"updateCompanyForm\"  >\n        <mat-form-field appearance =\"outline\">\n            <mat-label>Email</mat-label>\n            <input type=\"text\" matInput formControlName=\"email\" required>\n            <mat-error *ngIf=\"updateCompanyForm.controls['email'].errors?.required\">Email is required !</mat-error>\n            <mat-error *ngIf=\"updateCompanyForm.controls['email'].errors?.email\">Email is not legit !</mat-error>\n        </mat-form-field><br>\n        <mat-form-field appearance=\"outline\">\n            <mat-label>Password</mat-label>\n            <input type=\"text\" matInput formControlName=\"password\" required>\n            <mat-error>Password is required !</mat-error>\n        </mat-form-field><br>\n        <button mat-raised-button type=\"submit\" [disabled]=\"!updateCompanyForm.valid\" (click)=\"updateCompany()\">Update !</button>\n        <br><br>\n    </form>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { LoginComponent } from '../login/login.component';\nimport * as angular from \"angular\";\n\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  videoPlaying:number;\n\n  constructor(private router:Router, private dialog:MatDialog) {\n      this.router = router;\n      this.dialog = dialog;\n      this.videoPlaying = 1;\n  }\n  ngOnInit() {\n  }\n  goToLogin() {\n      this.router.navigate(['login']);\n  }\n  openLoginDialog() {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.maxHeight = '800px';\n      dialogConfig.maxWidth = '600px';\n      dialogConfig.restoreFocus = true;\n      dialogConfig.autoFocus = true;\n      const dialogRef = this.dialog.open(LoginComponent, dialogConfig);\n  }\n  nextVideo() {\n      if (this.videoPlaying < 3)\n          this.videoPlaying++;\n      else\n          this.videoPlaying = 1;\n  }\n}\n\n\n","<video muted autoplay id=\"v1\" *ngIf=\"videoPlaying==1\"\n    src=\"https://www.videvo.net/videvo_files/converted/2015_05/preview/FoodPack1_12_Videvo.mov93550.webm\"\n    (ended)=\"nextVideo()\"></video>\n<script> document.getElementById('v1').play();</script>\n<video muted autoplay *ngIf=\"videoPlaying==2\"\n    src=\"https://www.videvo.net/videvo_files/converted/2017_09/preview/170804_A_Lombok_032.mp470034.webm\"\n    (ended)=\"nextVideo()\"></video>\n<video muted autoplay *ngIf=\"videoPlaying==3\"\n    src=\"https://cdn.videvo.net/videvo_files/video/free/2020-04/small_watermarked/200413_01_Cine_03_preview.webm\"\n    (ended)=\"nextVideo()\"></video>\n\n<div class=\"header\">\n    Gad's Coupon Website\n</div>\n<div class=\"content\">\n    <p>\n        Get All your favourite deals on Rrestaurants, Vacations, Spa's, Electronics and Fashion\n    </p>\n    <button mat-raised-button (click)=\"openLoginDialog()\">Login</button>\n</div>","import { ChangeDetectorRef, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ClientType } from '../models/client-type.enum';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n\n  token: string = sessionStorage.getItem('userId');\n\n  // a simple verfication of the token in order to display/hide logout button\n  loggedIn: boolean = this.token != null && this.token.length > 10;\n\n  // userName:string = \"username\";\n\n  constructor(private client: HttpClient) { }\n\n  login(email: string, password: string, clientType: string) {\n    return this.client.get(\"http://localhost:8080/login/\" + email + \"/\" + password + \"/\" + clientType, { responseType: 'text' });\n  }\n\n  logout() {\n    return this.client.get(\"http://localhost:8080/login/logout/\" + this.token, { responseType: 'text' });\n  }\n\n  // setUsername(username: string) {\n  //   this.userName = username;\n  // }\n  \n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n    <img src=\"./assets/404.jpg\" alt=\"wtf\">\n</div>","import { Component, OnInit } from '@angular/core';\nimport { CompanyService } from 'src/app/services/company.service';\nimport { Company } from 'src/app/models/company';\n\n@Component({\n  selector: 'app-company-details',\n  templateUrl: './company-details.component.html',\n  styleUrls: ['./company-details.component.css']\n})\nexport class CompanyDetailsComponent implements OnInit {\n\n  constructor(private service:CompanyService) { }\n\n  company:Company;\n\n  ngOnInit(): void {\n      this.service.getCompanyDetails().subscribe((res) => {\n        this.company = res;\n      },(err)=>{\n        alert(err.error);\n        console.log(err.error);\n      });\n  }\n\n}\n","<div>\n    <h1>Company Details</h1>\n    <span>Name: {{company.name}}</span>\n    <span>Email: {{company.email}}</span>\n    <span>Password: {{company.password}}</span>\n    <!-- <span>Num. of Coupons: {{company.coupons.length}}</span> -->\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { CustomerService } from 'src/app/services/customer.service';\nimport { Coupon } from 'src/app/models/coupon';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatDialogConfig, MatDialog } from '@angular/material/dialog';\nimport { ImageDialogComponent } from '../image-dialog/image-dialog.component';\n\n@Component({\n  selector: 'app-coupon-display',\n  templateUrl: './coupon-display.component.html',\n  styleUrls: ['./coupon-display.component.css']\n})\nexport class CouponDisplayComponent implements OnInit {\n\n  couponMessage: string;\n\n  @Input()\n  coupon: Coupon;\n\n  constructor(private service: CustomerService, private snack: MatSnackBar, private dialog:MatDialog) { }\n\n  ngOnInit(): void {\n  }\n\n  purchaseCoupon() {\n    this.service.purchaseCoupon(this.coupon.id).subscribe((res) => {\n      this.couponMessage = res;\n      this.showSnack();\n      console.log(res);\n    },(err)=>{\n      alert(err.error);\n      console.log(err.error);\n    })\n  };\n\n  showSnack() {\n    let snackRef = this.snack.open(this.couponMessage, \"close\", { duration: 2000 });\n    snackRef.onAction().subscribe(() => {\n      //do your stuff here !\n      this.snack.dismiss();\n    })\n  }\n\n  openImage() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.maxHeight = '400px';\n    dialogConfig.maxWidth = '600px';\n    dialogConfig.restoreFocus = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.data = {\n      imageUrl: this.coupon.image\n    };\n    const dialogRef = this.dialog.open(ImageDialogComponent, dialogConfig);\n  }\n\n}\n","<div>\n    <img [src]=\"coupon.image\" alt=\"wtf\" width=\"300px\" height=\"200px\" (click)=\"openImage()\">\n    <span>Title: {{coupon.title}}</span>\n    <span>Category: {{coupon.category}}</span>\n    <span>Description: {{coupon.description}}</span>\n    <span>Company: {{coupon.company.name}}</span>\n    <span>Start Date: {{coupon.startDate}}</span>\n    <span>End Date: {{coupon.endDate}}</span>\n    <span>Amount: {{coupon.amount}}</span>\n    <span>Price: {{coupon.price}}</span>\n    Buy: <button mat-raised-button (click)=\"purchaseCoupon()\">\n        <mat-icon>attach_money</mat-icon>\n    </button>\n</div>","import { Coupon } from './coupon';\n\nexport class Company {\n//try to use getters and setters\nconstructor(\n    public id: number,\n    public name: string,\n    public password: string,\n    public email: string,\n    public coupons: Coupon[]){}\n    // public editable:boolean =false;\n    \n    public get_coupons(): Coupon[] {\n        return this.coupons;\n    }\n    public set_coupons(coupons: Coupon[]) {\n        this.coupons = coupons;\n    }\n\n    public get_email(): string {\n        return this.email;\n    }\n    public set_email(email: string) {\n        this.email = email;\n    }\n\n    public get_password(): string {\n        return this.password;\n    }\n    public set_password(password: string) {\n        this.password = password;\n    }\n\n    public getName(): string {\n        return this.name;\n    }\n    public set_name(name: string) {\n        this.name = name;\n    }\n\n\n    public getid(): number {\n        return this.id;\n    }\n    public set_id(id: number) {\n        this.id = id;\n    }\n\n}\n","import { Component } from '@angular/core';\nimport { LoginService } from './services/login.service';\nimport { Router } from '@angular/router';\nimport { Main } from 'tsparticles/main';\nimport { Container } from 'tsparticles';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  title = 'CouponSystemWebsite';\n  id = \"tsparticles\";\n  /* Starting from 1.19.0 you can use a remote url (AJAX request) to a JSON with the configuration */\n  // particlesUrl = \"assets/data/particlesjs-config.json\";\n\n\n  constructor(){}\n\n  /* or the classic JavaScript object */\n  particlesOptions = {\n    background: {\n        color: {\n            value: \"#0d47a1\"\n        }\n    },\n    fpsLimit: 60,\n    interactivity: {\n        detectsOn: \"canvas\",\n        events: {\n            onClick: {\n                enable: true,\n                mode: \"push\"\n            },\n            onHover: {\n                enable: true,\n                mode: \"repulse\"\n            },\n            resize: true\n        },\n        modes: {\n            bubble: {\n                distance: 400,\n                duration: 2,\n                opacity: 0.8,\n                size: 40\n            },\n            push: {\n                quantity: 4\n            },\n            repulse: {\n                distance: 200,\n                duration: 0.4\n            }\n        }\n    },\n    particles: {\n        color: {\n            value: \"#ffffff\"\n        },\n        links: {\n            color: \"#ffffff\",\n            distance: 150,\n            enable: true,\n            opacity: 0.5,\n            width: 1\n        },\n        collisions: {\n            enable: true\n        },\n        move: {\n            direction: \"none\",\n            enable: true,\n            outMode: \"bounce\",\n            random: false,\n            speed: 6,\n            straight: false\n        },\n        number: {\n            density: {\n                enable: true,\n                value_area: 800\n            },\n            value: 80\n        },\n        opacity: {\n            value: 0.5\n        },\n        shape: {\n            type: \"circle\"\n        },\n        size: {\n            random: true,\n            value: 5\n        }\n    },\n    detectRetina: true\n  };\n\n  particlesInit(main: Main): void {\n    console.log(main);  \n}\n\nparticlesLoaded(container: Container): void {\n  console.log(container);\n}\n// Starting from 1.19.0 you can add custom presets or shape here, using the current tsParticles instance (main)\n\n}\n","<div>\n  <app-toolbar></app-toolbar>\n<main>\n  <router-outlet>\n    <!-- <ng-particles [id]=\"id\" [options]=\"particlesOptions\" (particlesLoaded)=\"particlesLoaded($event)\"\n    (particlesInit)=\"particlesInit($event)\" ></ng-particles> -->\n  </router-outlet>\n</main>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { CustomerService } from 'src/app/services/customer.service';\nimport { CompanyService } from 'src/app/services/company.service';\nimport { Company } from 'src/app/models/company';\nimport { Customer } from 'src/app/models/customer';\n\n@Component({\n  selector: 'app-user-details',\n  templateUrl: './user-details.component.html',\n  styleUrls: ['./user-details.component.css']\n})\nexport class UserDetailsComponent implements OnInit {\n\ncompany:Company;\ncustomer:Customer;\n\n  constructor(private customerService:CustomerService, private companyService:CompanyService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>user-details works!</p>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-image-dialog',\n  templateUrl: './image-dialog.component.html',\n  styleUrls: ['./image-dialog.component.css']\n})\nexport class ImageDialogComponent implements OnInit {\n\nimage:string;\n\n  constructor(private dialogRef: MatDialogRef<ImageDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) data) {this.image = data.imageUrl }\n\n  ngOnInit(): void {\n  }\n\n}\n","    <img [src]=\"image\" alt=\"wtf\">\n","import { Component, OnInit } from '@angular/core';\nimport { CustomerService } from 'src/app/services/customer.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { CouponDisplayComponent } from '../coupon-display/coupon-display.component';\nimport { Coupon } from 'src/app/models/coupon';\nimport { Category } from 'src/app/models/category.enum';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Customer } from 'src/app/models/customer';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { CustomerDetailsComponent } from '../customer-details/customer-details.component';\n\n@Component({\n  selector: 'app-customer',\n  templateUrl: './customer.component.html',\n  styleUrls: ['./customer.component.css']\n})\nexport class CustomerComponent implements OnInit {\n\n  searchCouponForm: FormGroup;\n  couponMessage: string;\n\n  coupons: Coupon[];\n  filteredCoupons: Coupon[] = new Array(0);\n\n  customer: Customer;\n\n  categoryList = Category;\n  keys = Object.keys(this.categoryList);\n\n  constructor(private service: CustomerService, private fb: FormBuilder, private snack: MatSnackBar, private dialog: MatDialog) { }\n\n  ngOnInit(): void {\n    this.service.getAllCoupons().subscribe((res) => {\n      this.coupons = res;\n      console.log(res);\n    }, (err) => {\n      this.couponMessage = err.error;\n      console.log(err.error);\n    });\n\n    this.searchCouponForm = this.fb.group({\n      searchBy: [''],\n      searchCat: ['', Validators.required],\n      searchMaxPrice: ['', [Validators.required, Validators.min(1)]]\n    });\n  }\n\n  searchCoupons() {\n    this.couponMessage = '';\n    let searchBy = this.searchCouponForm.controls['searchBy'].value;\n    let cat = this.searchCouponForm.controls['searchCat'].value;\n    let maxPrice = this.searchCouponForm.controls['searchMaxPrice'].value;\n    switch (searchBy) {\n      case 'category':\n        if (cat == '' || cat == null) { break; }\n        this.filteredCoupons = this.coupons.filter(({ category }) => category == cat);\n        if (this.filteredCoupons.length == 0) {\n          this.couponMessage = \"No Coupons Found!\";\n          this.showSnack();\n        }\n        break;\n      case 'maxPrice':\n        let max = parseFloat(maxPrice);\n        this.filteredCoupons = this.coupons.filter(({ price }) => price <= max);\n        if (this.filteredCoupons.length == 0) {\n          this.couponMessage = \"No Coupons Found!\";\n          this.showSnack();\n        }\n        break;\n      case 'myCoupons':\n        this.service.getCustomerCoupons().subscribe((res)=>{\n          this.filteredCoupons = res;\n          console.log(res);\n        },(err)=>{\n          alert(err.error);\n          console.log(err.error);\n        })\n        break;\n      default: this.ngOnInit();\n    }\n  }\n\n  showSnack() {\n    let snackRef = this.snack.open(this.couponMessage, \"close\", { duration: 2000 });\n    snackRef.onAction().subscribe(() => {\n      //do your stuff here !\n      this.snack.dismiss();\n    });\n  }\n\n  openCustomerDetails() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.maxHeight = '400px';\n    dialogConfig.maxWidth = '600px';\n    dialogConfig.autoFocus = true;\n    const dialogRef = this.dialog.open(CustomerDetailsComponent, dialogConfig);\n  }\n\n\n}\n","<!-- Search Coupons -->\n<form action=\"POST\" [formGroup]=\"searchCouponForm\" style=\"display: inline;\">\n    <button mat-raised-button (click)=\"searchCoupons()\">Search</button>\n    <mat-form-field>\n        <mat-label>Search By</mat-label>\n        <mat-select matInput formControlName=\"searchBy\">\n            <mat-option></mat-option>\n            <mat-option value=\"category\">Category</mat-option>\n            <mat-option value=\"maxPrice\">Max Price</mat-option>\n            <mat-option value=\"myCoupons\">My Coupons</mat-option>\n        </mat-select>\n    </mat-form-field>\n    <mat-form-field *ngIf=\"searchCouponForm.controls['searchBy'].value == 'category'\">\n        <mat-label>Category</mat-label>\n        <mat-select matInput formControlName=\"searchCat\">\n            <mat-option *ngFor=\"let cat of keys\" [value]=\"cat\">{{categoryList[cat]}}</mat-option>\n        </mat-select>\n        <mat-error>must select a category</mat-error>\n    </mat-form-field>\n    <mat-form-field *ngIf=\"searchCouponForm.controls['searchBy'].value == 'maxPrice'\">\n        <mat-label>Max Price</mat-label>\n        <input type=\"number\" matInput formControlName=\"searchMaxPrice\" min=\"1\" required>\n        <mat-error *ngIf=\"searchCouponForm.controls['searchMaxPrice'].errors?.required\">Price is required</mat-error>\n        <mat-error *ngIf=\"searchCouponForm.controls['searchMaxPrice'].errors?.min\">Price must be above 0</mat-error>\n    </mat-form-field>\n</form>\n<!-- Dispaly Customer Details -->\n<button mat-stroked-button (click)=\"openCustomerDetails()\">Customer Details</button>\n<!-- Display Coupons -->\n<div>\n    <div *ngIf=\"searchCouponForm.controls['searchBy'].value == ''||searchCouponForm.controls['searchBy'].value == null\"\n        class=\"gridDisplay\">\n        <app-coupon-display *ngFor=\"let c of coupons\" [coupon]=\"c\"></app-coupon-display>\n    </div>\n    <div *ngIf=\"filteredCoupons.length>0 && searchCouponForm.controls['searchBy'].value != ''&&searchCouponForm.controls['searchBy'].value != null\"\n        class=\"gridDisplay\">\n        <app-coupon-display *ngFor=\"let c of filteredCoupons\" [coupon]=\"c\"></app-coupon-display>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ClientType } from 'src/app/models/client-type.enum';\nimport { LoginService } from 'src/app/services/login.service';\nimport { Router } from '@angular/router';\nimport { CompanyService } from 'src/app/services/company.service';\nimport { AdminService } from 'src/app/services/admin.service';\nimport { CustomerService } from 'src/app/services/customer.service';\nimport { CompanyComponent } from '../company/company.component';\nimport { CustomerComponent } from '../customer/customer.component';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { ToolbarComponent } from '../toolbar/toolbar.component';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private fb: FormBuilder,  private service: LoginService,\n    private router: Router, private dialogRef: MatDialogRef<LoginComponent>) { }\n\n  loginForm: FormGroup;\n\n  errorMessage: string;\n\n  hide = true;\n\n  ngOnInit(): void {\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n      client: ['', Validators.required]\n    });\n  }\n\n  public login() {\n    this.service.login(this.loginForm.controls['email'].value, this.loginForm.controls['password'].value,\n      this.loginForm.controls['client'].value).subscribe((token) => {\n        // this.toolbar.userName = \"jlhl\";\n        sessionStorage.setItem('userId', token);\n        this.service.loggedIn = true;\n        switch (this.loginForm.controls['client'].value) {\n          case \"Administrator\":\n            this.router.navigate([\"admin\"]);\n            this.dialogRef.close();\n            break;\n          case \"Company\":\n            this.router.navigate([\"company\"]);\n            this.dialogRef.close();\n            break;\n          case \"Customer\":\n            this.router.navigate([\"customer\"]);\n            this.dialogRef.close();\n            break;\n        }\n      }, (err) => {\n        this.errorMessage = err.error;\n        console.log(err.error);\n      });\n  }\n\n  logout() {\n    this.service.logout().subscribe((res) => {\n      sessionStorage.removeItem('userId');\n      this.service.loggedIn = false;\n      // this.toolbar.userName = '';\n      alert(res);\n      this.router.navigate([\"main\"]);\n    }, (err) => {\n      alert(err.error);\n    })\n  };\n\n}\n","<div>\n    <h1>Login</h1>\n    <form [formGroup]=\"loginForm\" >\n        <mat-form-field appearance =\"outline\">\n            <mat-label>Email</mat-label>\n            <input type=\"text\" matInput formControlName=\"email\" required>\n            <mat-error *ngIf=\"loginForm.controls['email'].errors?.required\">Email is required !</mat-error>\n            <mat-error *ngIf=\"loginForm.controls['email'].errors?.email\">Email is not legit !</mat-error>\n        </mat-form-field><br><br>\n        <mat-form-field appearance=\"outline\">\n            <mat-label>Password</mat-label>\n            <input [type]=\"hide ? 'password' : 'text'\" matInput formControlName=\"password\" required>\n            <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n              <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n            </button>\n            <mat-error>Password is required !</mat-error>\n        </mat-form-field><br><br>\n        <mat-form-field appearance=\"outline\">\n            <mat-label>Who are you?</mat-label>\n            <!-- <mat-select [formControl]=\"clientSelect\" formControlName=\"client\" > -->\n                <mat-select matInput formControlName=\"client\" >\n             <mat-option value=\"Administrator\">Administrator</mat-option>\n            <mat-option value=\"Company\">Company</mat-option>\n            <mat-option value=\"Customer\">Customer</mat-option>\n            </mat-select>\n        </mat-form-field><br><br>\n        <span>{{errorMessage}}</span><br><br>\n        <button mat-raised-button [disabled]=\"!loginForm.valid\" (click)=\"login()\">Login</button>\n        <br><br>\n    </form>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { ReactiveFormsModule} from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport {NgParticlesModule} from \"ng-particles\";\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AdminComponent } from './components/admin/admin.component';\nimport { CompanyComponent } from './components/company/company.component';\nimport { CustomerComponent } from './components/customer/customer.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\nimport { UpdateCoupon2Component } from './components/company/update-coupon2/update-coupon2.component';\nimport { ImageDialogComponent } from './components/image-dialog/image-dialog.component';\nimport { UserDetailsComponent } from './components/user-details/user-details.component';\nimport { CustomerDetailsComponent } from './components/customer-details/customer-details.component';\nimport { CouponDisplayComponent } from './components/coupon-display/coupon-display.component';\nimport { ToolbarComponent } from './components/toolbar/toolbar.component';\nimport { ErrorHandlerInterceptor } from './error-handler.interceptor';\nimport { UpdateCompanyComponent } from './components/update-company/update-company.component';\nimport { UpdateCustomerComponent } from './components/update-customer/update-customer.component';\nimport { HomeComponent } from './components/home/home.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AdminComponent,\n    CompanyComponent,\n    CustomerComponent,\n    LoginComponent,\n    NotFoundComponent,\n    UpdateCoupon2Component,\n    ImageDialogComponent,\n    UserDetailsComponent,\n    CustomerDetailsComponent,\n    CouponDisplayComponent,\n    ToolbarComponent,\n    UpdateCompanyComponent,\n    UpdateCustomerComponent,\n    HomeComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatMenuModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    ReactiveFormsModule,\n    MatSliderModule,\n    MatCheckboxModule,\n    MatSlideToggleModule,\n    MatBadgeModule,\n    MatSelectModule,\n    MatAutocompleteModule,\n    MatTooltipModule,\n    MatSnackBarModule,\n    MatDialogModule,\n    FormsModule,\n    MatTabsModule,\n    NgParticlesModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorHandlerInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Coupon } from '../models/coupon';\nimport { Category } from '../models/category.enum';\nimport { Company } from '../models/company';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CompanyService {\n\n  constructor(private client:HttpClient) { }\n\n  addCoupon(coupon:Coupon){\n    return this.client.post(\"http://localhost:8080/company/addCoupon/\"+sessionStorage.getItem('userId'),coupon,{responseType:'text'});\n  }\n\n  updateCoupon(coupon:Coupon){\n    return this.client.put(\"http://localhost:8080/company/updateCoupon/\"+sessionStorage.getItem('userId'),coupon,{responseType:'text'});\n  }\n\n  deleteCoupon(id:number){\n    return this.client.delete(\"http://localhost:8080/company/deleteCoupon/\"+id+\"/\"+sessionStorage.getItem('userId'),{responseType:'text'});\n  }\n\n  getCompanyCoupons(){\n    return this.client.get<Coupon[]>(\"http://localhost:8080/company/getCoupons/\"+sessionStorage.getItem('userId'));\n  }\n\n  getCouponsByCategory(category:Category){\n    return this.client.get<Coupon[]>(\"http://localhost:8080/company/getCouponsByCategory/\"+category+\"/\"+sessionStorage.getItem('userId'));\n  }\n\n  getCouponsBelowPrice(price:number){\n    return this.client.get<Coupon[]>(\"http://localhost:8080/company/getCouponsBelowPrice/\"+price+\"/\"+sessionStorage.getItem('userId'));\n  }\n\n  getCoupon(id:number){\n    return this.client.get<Coupon>(\"http://localhost:8080/company/getOneCoupon/\"+id+\"/\"+sessionStorage.getItem('userId'));\n  }\n\n  getCompanyDetails(){\n    return this.client.get<Company>(\"http://localhost:8080/company/getCompanyDetails/\"+sessionStorage.getItem('userId'));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AdminService } from 'src/app/services/admin.service';\nimport { Customer } from 'src/app/models/customer';\nimport { Company } from 'src/app/models/company';\nimport { Coupon } from 'src/app/models/coupon';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { UpdateCompanyComponent } from '../update-company/update-company.component';\nimport { UpdateCustomerComponent } from '../update-customer/update-customer.component';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor(private service: AdminService, private fb: FormBuilder, private snack: MatSnackBar, private dialog:MatDialog) { }\n\n  customers: Customer[];\n  companies: Company[];\n  companyEmail: string;\n  coupons: Coupon[];\n\n  addCompanyForm: FormGroup;\n  searchCompanyForm: FormGroup;\n  addCustomerForm: FormGroup;\n  searchCustomerForm: FormGroup;\n\n  \n\n  messageForUser: string;\n\n\n  ngOnInit(): void {\n    this.addCompanyForm = this.fb.group({\n      name: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n\n    this.addCustomerForm = this.fb.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n\n    this.searchCompanyForm = this.fb.group({\n      email: ['',Validators.email]\n    });\n\n    this.searchCustomerForm = this.fb.group({\n      email: ['',Validators.email]\n    });\n\n   \n  }\n\n  searchCompanies() {\n    if (this.searchCompanyForm.controls['email'].value == ''||this.searchCompanyForm.controls['email'].value ==null) {\n    // if (this.companyEmail == '' || this.companyEmail == null || this.companyEmail == undefined) {\n      this.service.getAllCompanies().subscribe((comps) => {\n        this.companies = comps;\n        this.messageForUser = null;\n      }, (err) => {\n        console.log(err);\n        this.messageForUser = err.error;\n      });\n    } else {\n      this.service.getCompanyByEmail(this.searchCompanyForm.controls['email'].value).subscribe((res) => {\n      // this.service.getCompanyByEmail(this.companyEmail).subscribe((res) => {\n        this.companies = new Array(1);\n        this.companies[0] = res;\n        this.messageForUser = null;\n      }, (err) => {\n        this.messageForUser = err.error;\n        alert(err.error);\n      })\n\n    }\n  }\n\n  searchCustomers() {\n    if (this.searchCustomerForm.controls['email'].value == ''||this.searchCustomerForm.controls['email'].value == null) {\n      this.service.getAllCustomers().subscribe((cusz) => {\n        this.customers = cusz;\n        this.messageForUser = null;\n      }, (err) => {\n        this.messageForUser = err.error;\n        alert(err.error);\n      });\n    } else {\n      this.service.getCustomerByEmail(this.searchCustomerForm.controls['email'].value).subscribe((res) => {\n        this.customers = new Array(1);\n        this.customers[0] = res;\n        this.messageForUser = null;\n      }, (err) => {\n        this.messageForUser = err.error;\n        alert(err.error);\n      })\n    }\n  }\n\n  editCompany(company: Company) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.autoFocus = true;\n    dialogConfig.restoreFocus = true;\n    dialogConfig.data = {\n      dataToSend: company\n    };\n    const dialogRef = this.dialog.open(UpdateCompanyComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe((data) => {\n      if (data == undefined)\n        return;\n      company = data;\n      console.log(data);\n      console.log(company);\n    })\n  }\n\n  editCustomer(customer: Customer) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.autoFocus = true;\n    dialogConfig.restoreFocus = true;\n    dialogConfig.data = {\n      dataToSend: customer\n    };\n    const dialogRef = this.dialog.open(UpdateCustomerComponent, dialogConfig);\n    dialogRef.afterClosed().subscribe((data) => {\n      if (data == undefined)\n        return;\n      customer = data;\n      console.log(data);\n      console.log(customer);\n    })\n  }\n\n\n\n  deleteCompany(company: Company) {\n    this.service.deleteCompany(company.id).subscribe((res) => {\n      this.messageForUser = res;\n      this.showSnack();\n      this.companies.splice(this.companies.indexOf(company), 1);\n    }, (err) => {\n      this.messageForUser = err.error;\n      alert(err.error);\n    });\n  }\n\n\n\n\n  deleteCustomer(customer: Customer) {\n    this.service.deleteCustomer(customer.id).subscribe((res) => {\n      this.messageForUser = res;\n      this.showSnack();\n      this.customers.splice(this.customers.indexOf(customer), 1);\n    }, (err) => {\n      this.messageForUser = err.error;\n      alert(err.error);\n    });\n  }\n\n  addCompany() {\n    let c = new Company(0, this.addCompanyForm.controls['name'].value, this.addCompanyForm.controls['password'].value,\n      this.addCompanyForm.controls['email'].value, null)\n    this.service.addCompany(c).subscribe((res) => {\n      this.messageForUser = res;\n      this.showSnack();\n      this.formReset(this.addCompanyForm);\n    }, (err) => {\n      this.messageForUser = err.error;\n      alert(err.error);\n    });\n  }\n\n  addCustomer() {\n    let c = new Customer(0, this.addCustomerForm.controls['firstName'].value, this.addCustomerForm.controls['lastName'].value,\n      this.addCustomerForm.controls['email'].value, this.addCustomerForm.controls['password'].value, null)\n    this.service.addCustomer(c).subscribe((res) => {\n      this.messageForUser = res;\n      this.showSnack();\n      this.formReset(this.addCustomerForm);\n    }, (err) => {\n      this.messageForUser = err.error;\n      alert(err.error);\n    });\n  }\n\n  showSnack() {\n    let snackRef = this.snack.open(this.messageForUser, \"close\", { duration: 2000 });\n    snackRef.onAction().subscribe(() => {\n      //do your stuff here !\n      this.snack.dismiss();\n    })\n  }\n\n  formReset(form: FormGroup) {\n\n    form.reset();\n\n    Object.keys(form.controls).forEach(key => {\n      form.get(key).setErrors(null) ;\n    });\n}\n\n}\n","<div class=\"grid-container\">\n    <mat-tab-group>\n        <mat-tab label=\"Companies\">\n            <form action=\"POST\" [formGroup]=\"searchCompanyForm\">\n                <!-- <form action=\"POST\"> -->\n                <button mat-raised-button (click)=\"searchCompanies()\"\n                    [disabled]=\"!searchCompanyForm.valid\">Search</button>\n                <!-- <button mat-raised-button *ngIf=\"searchCompanyForm.controls['email'].value!=''\" (click)=\"searchOneCompany()\">Search One</button> -->\n                <mat-form-field>\n                    <mat-label>Email</mat-label>\n                    <input type=\"text\" matInput formControlName=\"email\">\n                    <!-- <input type=\"text\" matInput [(ngModel)]=\"companyEmail\" [ngModelOptions]=\"{standalone: true}\"> -->\n                    <button *ngIf=\"searchCompanyForm.controls['email'].value\" matSuffix mat-icon-button\n                        aria-label=\"Clear\" (click)=\"searchCompanyForm.reset()\">\n                        <mat-icon>close</mat-icon>\n                    </button>\n                    <mat-error>Email not legit</mat-error>\n                </mat-form-field>\n            </form><br>\n            <table>\n                <tr>\n                    <th>Name</th>\n                    <th>Email</th>\n                    <th>Password</th>\n                </tr>\n                <tr *ngFor=\"let c of companies\">\n                    <td>{{c.name}}</td>\n                    <td>\n                        <!-- <input type=\"text\" *ngIf=\"c.editable\" [(ngModel)]=\"c.email \"> -->\n                        <span>{{c.email}}</span>\n                    </td>\n                    <td>\n                        <!-- <input type=\"text\" *ngIf=\"c.editable\" [(ngModel)]=\"c.password \"> -->\n                        <span>{{c.password}}</span>\n                    </td>\n                    <button mat-raised-button *ngIf=\"!c.editable\" (click)=\"editCompany(c)\">Edit</button>\n                    <!-- <button mat-raised-button *ngIf=\"c.editable\" (click)=\"updateCompany(c)\">Update</button> -->\n                    <button mat-raised-button (click)=\"deleteCompany(c)\">\n                        <mat-icon>delete_outline</mat-icon>\n                    </button>\n                </tr>\n            </table><br>\n        </mat-tab>\n        <mat-tab label=\"Customers\">\n            <form action=\"POST\" [formGroup]=\"searchCustomerForm\">\n                <button mat-raised-button (click)=\"searchCustomers()\"\n                    [disabled]=\"!searchCustomerForm.valid\">Search</button>\n                <mat-form-field>\n                    <mat-label>Email</mat-label>\n                    <input type=\"text\" matInput formControlName=\"email\">\n                    <button *ngIf=\"searchCustomerForm.controls['email'].value\" matSuffix mat-icon-button\n                        aria-label=\"Clear\" (click)=\"searchCustomerForm.reset()\">\n                        <mat-icon>close</mat-icon>\n                    </button>\n                    <mat-error>Email not legit</mat-error>\n                </mat-form-field>\n            </form><br>\n            <table>\n                <tr>\n                    <th>First Name</th>\n                    <th>Last Name</th>\n                    <th>Email</th>\n                    <th>Password</th>\n                </tr>\n                <tr *ngFor=\"let c of customers\">\n                    <td>\n                        <!-- <input type=\"text\" *ngIf=\"c.editable\" [(ngModel)]=\"c.firstName \"> -->\n                        <span>{{c.firstName}}</span>\n                    </td>\n                    <td>\n                        <!-- <input type=\"text\" *ngIf=\"c.editable\" [(ngModel)]=\"c.lastName \"> -->\n                        <span>{{c.lastName}}</span>\n                    </td>\n                    <td>\n                        <!-- <input type=\"text\" *ngIf=\"c.editable\" [(ngModel)]=\"c.email \"> -->\n                        <span>{{c.email}}</span>\n                    </td>\n                    <td>\n                        <!-- <input type=\"text\" *ngIf=\"c.editable\" [(ngModel)]=\"c.password \"> -->\n                        <span>{{c.password}}</span>\n                    </td>\n                    <button mat-raised-button *ngIf=\"!c.editable\" (click)=\"editCustomer(c)\">Edit</button>\n                    <!-- <button mat-raised-button *ngIf=\"c.editable\" (click)=\"updateCustomer(c)\">Update</button> -->\n                    <button mat-raised-button (click)=\"deleteCustomer(c)\">\n                        <mat-icon>delete_outline</mat-icon>\n                    </button>\n                </tr>\n            </table><br>\n        </mat-tab>\n    </mat-tab-group>\n    <div class=\"add\">\n        <h2>Add a Company</h2>\n        <form [formGroup]=\"addCompanyForm\">\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Name</mat-label>\n                <input type=\"text\" matInput formControlName=\"name\" required>\n                <mat-error>Name is required !</mat-error>\n            </mat-form-field>\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Email</mat-label>\n                <input type=\"text\" matInput formControlName=\"email\" required>\n                <mat-error *ngIf=\"addCompanyForm.controls['email'].errors?.required\">Email is required !</mat-error>\n                <mat-error *ngIf=\"addCompanyForm.controls['email'].errors?.email\">Email is not legit !</mat-error>\n            </mat-form-field><br>\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Password</mat-label>\n                <input type=\"text\" matInput formControlName=\"password\" required>\n                <mat-error>Password is required !</mat-error>\n            </mat-form-field><br>\n            <button mat-raised-button type=\"submit\" [disabled]=\"!addCompanyForm.valid\" (click)=\"addCompany()\">Add\n                Company</button>\n            <br><br>\n        </form>\n        <h2>Add a Customer</h2>\n        <form [formGroup]=\"addCustomerForm\">\n            <mat-form-field appearance=\"outline\">\n                <mat-label>First Name</mat-label>\n                <input type=\"text\" matInput formControlName=\"firstName\" required>\n                <mat-error>First Name is required !</mat-error>\n            </mat-form-field>\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Last Name</mat-label>\n                <input type=\"text\" matInput formControlName=\"lastName\" required>\n                <mat-error>Last Name is required !</mat-error>\n            </mat-form-field>\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Email</mat-label>\n                <input type=\"text\" matInput formControlName=\"email\" required>\n                <mat-error *ngIf=\"addCustomerForm.controls['email'].errors?.required\">Email is required !</mat-error>\n                <mat-error *ngIf=\"addCustomerForm.controls['email'].errors?.email\">Email is not legit !</mat-error>\n            </mat-form-field>\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Password</mat-label>\n                <input type=\"text\" matInput formControlName=\"password\" required>\n                <mat-error>Password is required !</mat-error>\n            </mat-form-field><br>\n            <!-- <span>{{addCustomerMessage}}</span><br> -->\n            <button mat-raised-button [disabled]=\"!addCustomerForm.valid\" (click)=\"addCustomer()\">Add Customer</button>\n            <br><br>\n        </form>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpResponse,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { retry, catchError} from 'rxjs/operators';\nimport { LoginService } from './services/login.service';\nimport { Router } from '@angular/router';\n\n@Injectable()\nexport class ErrorHandlerInterceptor implements HttpInterceptor {\n\n  constructor(private service: LoginService, private router: Router) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(request)\n      .pipe(\n        retry(0),\n        catchError((error: HttpErrorResponse) => {\n          if ( error.status === 504 || error.error == 'Session Expired !'||error.error == \"You have to Login hombre !\") {\n            let errorMessage = `You are not logged in ! \\n redirecting to home...`;\n            this.service.loggedIn = false;\n            sessionStorage.removeItem('userId');\n            this.router.navigate(['main']);\n            alert(errorMessage);\n          }\n          // if(error.status== 0){\n          //   let errorMessage = 'Unknown Error ! maybe check the connection or come back later...';\n          //   this.router.navigate(['main']);\n          //   alert(errorMessage);\n          // } \n          else {\n            return throwError(error);\n          }\n        })\n      );\n  }\n}\n","import { Coupon } from './coupon';\n\nexport class Customer {\n\n    constructor(\n        public id: number,\n        public firstName: string,\n        public lastName: string,\n        public email: string,\n        public password: string,\n        public coupons: Coupon[]) { }\n        // public editable:boolean =false;\n\n\n        get _id():number{\n            return this.id;\n        }\n\n        get _firstName():string{\n            return this.firstName;\n        }\n\n        get _lastName():string{\n            return this.lastName;\n        }\n\n        get _email():string{\n            return this.email;\n        }\n\n        get _password():string{\n            return this.password;\n        }\n\n        get _coupons():Coupon[]{\n            return this.coupons;\n        }\n\n        set_id(id:number){\n            this.id = id;\n        }\n\n        set_firstName(firstName:string){\n            this.firstName = firstName;\n        }\n\n        set_lastName(lastName:string){\n         this.lastName = lastName;\n        }\n\n        set_email(email:string){\n         this.email = email;\n        }\n\n        set_password(password:string){\n            this.password = password;\n        }\n\n        set_coupons(coupons:Coupon[]){\n            this.coupons = coupons;\n        }\n}\n","<div>\n    <mat-toolbar color=\"primary\">\n      \n       <span class=\"toolbar-fill\">Coupon Website {{userName}}</span>\n       <!-- <mat-menu *ngIf=\"userName\" #companyMenu=\"matMenu\">\n         <button mat-menu-item (click)=\"openUserDetails()\">Company Details</button>\n         <button mat-menu-item (click)=\"logout()\">Logout</button>\n       </mat-menu> -->\n       <!-- <mat-menu #customerMenu=\"matMenu\">\n        <button mat-menu-item (click)=\"openUserDetails()\">Customer Details</button>\n        <button mat-menu-item (click)=\"logout()\">Logout</button>\n      </mat-menu> -->\n      <!-- <mat-menu #userMenu=\"matMenu\">\n        <button mat-menu-item (click)=\"openUserDetails()\">View Details</button>\n        <button mat-menu-item (click)=\"logout()\">Logout</button>\n      </mat-menu> -->\n       <!-- <button mat-stroked-button *ngIf=\"loginService.loggedIn==true && loginService.userName!=undefined && loginService.userName!=null\" [matMenuTriggerFor]=\"userMenu\">Hello {{userName}}</button>\n      <div *ngIf=\"loginService.loggedIn==true\">\n        <button mat-stroked-button *ngIf=\"(userName | async) as userName\" [matMenuTriggerFor]=\"userMenu\"> Hello {{userName}} </button>\n      </div> -->\n        <button matTooltip=\"Logout\" *ngIf=\"loginService.loggedIn==true\" (click)=\"logout()\">\n        <mat-icon>exit_to_app</mat-icon>\n      </button>\n      </mat-toolbar>\n</div>\n","import { AfterContentChecked, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { LoginService } from 'src/app/services/login.service';\nimport { Router } from '@angular/router';\nimport { CompanyService } from 'src/app/services/company.service';\nimport { AdminService } from 'src/app/services/admin.service';\nimport { CustomerService } from 'src/app/services/customer.service';\nimport { ClientType } from 'src/app/models/client-type.enum';\nimport { Observable, BehaviorSubject } from 'rxjs';\n\n@Component({\n  selector: 'app-toolbar',\n  templateUrl: './toolbar.component.html',\n  styleUrls: ['./toolbar.component.css']\n})\nexport class ToolbarComponent implements OnInit {\n\n  \n  constructor(public loginService:LoginService, private router:Router) { }\n  \n//   ngAfterContentChecked() {\n//     this.cdr.detectChanges();\n// }\n  \n  userName:string;\n  \n  ngOnInit(): void {\n    console.log(this.loginService)\n    console.log(this.userName)\n  }\n\n  logout(){\n    this.loginService.logout().subscribe((res)=>{\n      sessionStorage.removeItem('userId');\n      this.loginService.loggedIn = false;\n      alert(res);\n      this.router.navigate([\"main\"]);\n    },(err)=>{\n      alert(err.error);\n    })\n  };\n\n  openUserDetails(){\n\n  }\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { CompanyService } from 'src/app/services/company.service';\nimport { FormBuilder, FormGroup, Validators, AbstractControl, ValidatorFn, ValidationErrors, FormControl } from '@angular/forms';\nimport { Category } from 'src/app/models/category.enum';\nimport { Coupon } from 'src/app/models/coupon';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { UpdateCoupon2Component } from './update-coupon2/update-coupon2.component';\nimport { ImageDialogComponent } from '../image-dialog/image-dialog.component';\nimport { Company } from 'src/app/models/company';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { CompanyDetailsComponent } from '../company-details/company-details.component';\n\n@Component({\n  selector: 'app-company',\n  templateUrl: './company.component.html',\n  styleUrls: ['./company.component.css']\n})\nexport class CompanyComponent implements OnInit {\n\n  constructor(private service: CompanyService, private fb: FormBuilder, private dialog: MatDialog, private snack: MatSnackBar) { }\n\n  addCouponForm: FormGroup;\n  searchCouponForm: FormGroup;\n\n  messageForUser: string;\n\n  defaultImage: string = \"assets/placeholder-image.jpg\";\n\n  coupons: Coupon[];\n  company: Company;\n\n  categoryList = Category;\n  keys = Object.keys(this.categoryList);\n\n  today: Date = new Date();\n\n\n  ngOnInit(): void {\n    this.addCouponForm = this.fb.group({\n      title: ['', Validators.required],\n      category: ['', Validators.required],\n      description: ['', Validators.required],\n      price: ['', [Validators.required, Validators.min(1)]],\n      startDate: ['', [Validators.required, this.pastValidator]],\n      endDate: ['', [Validators.required]],\n      amount: ['', [Validators.required, Validators.min(1)]],\n      image: ['']\n    });\n\n    this.searchCouponForm = this.fb.group({\n      searchBy: [''],\n      searchCat: ['', Validators.required],\n      searchMaxPrice: ['', [Validators.required, Validators.min(1)]]\n    });\n\n  }\n\n  searchCoupons() {\n    let searchBy = this.searchCouponForm.controls['searchBy'].value;\n    let cat = this.searchCouponForm.controls['searchCat'].value;\n    let maxPrice = this.searchCouponForm.controls['searchMaxPrice'].value;\n    switch (searchBy) {\n      case 'category':\n        if (cat == '' || cat == null) { break; }\n        this.service.getCouponsByCategory(cat).subscribe((res) => {\n          this.coupons = res;\n        }, (err) => {\n          alert(err.error);\n          console.log(err.error);\n        });\n        break;\n      case 'maxPrice':\n        if (maxPrice == '' || maxPrice == null) { break; }\n        this.service.getCouponsBelowPrice(maxPrice).subscribe((res) => {\n          this.coupons = res;\n        }, (err) => {\n          alert(err.error);\n          console.log(err.error);\n        });\n        break;\n      default:\n        this.service.getCompanyCoupons().subscribe((res) => {\n          this.coupons = res;\n          console.log(res);\n        }, (err) => {\n          console.log(err.error);\n          alert(err.error);\n        });\n    }\n  }\n\n  editCoupon(coupon: Coupon) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.autoFocus = true;\n    dialogConfig.restoreFocus = true;\n    dialogConfig.disableClose = true;\n    dialogConfig.data = {\n      dataToSend: coupon\n    };\n    const dialogRef = this.dialog.open(UpdateCoupon2Component, dialogConfig);\n    dialogRef.afterClosed().subscribe((data) => {\n      if (data == undefined)\n        return;\n      coupon = data;\n      console.log(data);\n      console.log(coupon);\n    })\n  }\n\n  deleteCoupon(coupon: Coupon) {\n    this.service.deleteCoupon(coupon.id).subscribe((res) => {\n      this.messageForUser = res;\n      this.coupons.splice(this.coupons.indexOf(coupon), 1);\n      this.showSnack();\n    }, (err) => {\n      alert(err.error);\n      console.log(err.error);\n    });\n  }\n\n  addCoupon() {\n    let title = this.addCouponForm.controls['title'].value;\n    let cat = this.addCouponForm.controls['category'].value;\n    let description = this.addCouponForm.controls['description'].value;\n    let price = this.addCouponForm.controls['price'].value;\n    let startDate = this.addCouponForm.controls['startDate'].value;\n    if (startDate < this.today) {\n      alert('can not pick a start date before today !')\n      return;\n    }\n    let endDate = this.addCouponForm.controls['endDate'].value;\n    if (endDate < startDate) {\n      alert('can not pick an end date sooner than the start date !')\n      return;\n    }\n    let amount = this.addCouponForm.controls['amount'].value;\n    let image = this.addCouponForm.controls['image'].value;\n    if (image == null || image == '' || image == undefined) { image = this.defaultImage }\n    let coupon: Coupon = new Coupon(0, title, cat, description, price, this.company, startDate, endDate, amount, image);\n    this.service.addCoupon(coupon).subscribe((res) => {\n      this.messageForUser = res;\n      this.showSnack();\n      this.formReset(this.addCouponForm);\n    }, (err) => {\n      alert(err.error);\n      console.log(err.error);\n    });\n  }\n\n  openCompanyDetails() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.maxHeight = '400px';\n    dialogConfig.maxWidth = '600px';\n    dialogConfig.autoFocus = true;\n    const dialogRef = this.dialog.open(CompanyDetailsComponent, dialogConfig);\n  }\n\n  formReset(form: FormGroup) {\n\n    form.reset();\n\n    Object.keys(form.controls).forEach(key => {\n      form.get(key).setErrors(null);\n    });\n  }\n\n  openImage(coupon: Coupon) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.maxHeight = '400px';\n    dialogConfig.maxWidth = '600px';\n    dialogConfig.restoreFocus = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.data = {\n      imageUrl: coupon.image\n    };\n    const dialogRef = this.dialog.open(ImageDialogComponent, dialogConfig);\n  }\n\n  showSnack() {\n    let snackRef = this.snack.open(this.messageForUser, \"close\", { duration: 2000 });\n    snackRef.onAction().subscribe(() => {\n      //do your stuff here !\n      this.snack.dismiss();\n    })\n  }\n\n  pastValidator(control: AbstractControl) {\n    let yesterday = new Date();\n    yesterday.setDate(yesterday.getDate() - 1);\n    let startDate = new Date(control.value);\n    if (yesterday > startDate) {\n      return { pastError: true };\n    }\n  }\n\n\n}\n\n","<div>\n<mat-tab-group>\n    <mat-tab label=\"Search Coupons\">\n        <!-- Search Coupons -->\n        <form action=\"POST\" [formGroup]=\"searchCouponForm\">\n            <button mat-raised-button (click)=\"searchCoupons()\">Search</button>\n            <mat-form-field>\n                <mat-label>Search By</mat-label>\n                <mat-select matInput formControlName=\"searchBy\">\n                    <mat-option></mat-option>\n                    <mat-option value=\"category\">Category</mat-option>\n                    <mat-option value=\"maxPrice\">Max Price</mat-option>\n                </mat-select>\n            </mat-form-field>\n            <mat-form-field *ngIf=\"searchCouponForm.controls['searchBy'].value == 'category'\">\n                <mat-label>Category</mat-label>\n                <mat-select matInput formControlName=\"searchCat\">\n                    <mat-option *ngFor=\"let cat of keys\" [value]=\"cat\">{{categoryList[cat]}}</mat-option>\n                </mat-select>\n                <mat-error>must select a category</mat-error>\n            </mat-form-field>\n            <mat-form-field *ngIf=\"searchCouponForm.controls['searchBy'].value == 'maxPrice'\">\n                <mat-label>Max Price</mat-label>\n                <input type=\"number\" matInput formControlName=\"searchMaxPrice\" min=\"1\">\n                <mat-error *ngIf=\"searchCouponForm.controls['searchMaxPrice'].errors?.required\">Price is required</mat-error>\n                <mat-error *ngIf=\"searchCouponForm.controls['searchMaxPrice'].errors?.min\">Price must be above 0</mat-error>\n            </mat-form-field>\n            <button mat-stroked-button (click)=\"openCompanyDetails()\">Company Details</button>\n        </form><br>\n        <!-- Display Coupons -->\n        <table>\n            <tr>\n                <th>Title</th>\n                <th>Category</th>\n                <th>Description</th>\n                <th>Price</th>\n                <th>Start Date</th>\n                <th>End Date</th>\n                <th>Amount</th>\n                <th>Image</th>\n            </tr>\n            <tr *ngFor=\"let c of coupons\">\n                <td><span>{{c.title}}</span></td>\n                <td><span>{{c.category}}</span></td>\n                <td><span>{{c.description}}</span></td>\n                <td><span>{{c.price}}</span></td>\n                <td><span>{{c.startDate}}</span></td>\n                <td><span>{{c.endDate}}</span></td>\n                <td><span>{{c.amount}}</span></td>\n                <td><img src={{c.image}} alt=\"wtf\" height=\"20px\" width=\"20px\" (click)=\"openImage(c)\"></td>\n                <button mat-raised-button (click)=\"editCoupon(c)\">Edit</button>\n                <button mat-raised-button (click)=\"deleteCoupon(c)\">\n                    <mat-icon>delete_outline</mat-icon>\n                </button>\n            </tr>\n        </table><br>\n    </mat-tab>\n    <mat-tab label=\"Add Coupons\">\n        <!-- Add Coupon -->\n        <h2>Add a Coupon</h2>\n        <form [formGroup]=\"addCouponForm\">\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Title</mat-label>\n                <input type=\"text\" matInput formControlName=\"title\" required>\n                <mat-error>Title is required !</mat-error>\n            </mat-form-field>\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Category</mat-label>\n                <mat-select matInput formControlName=\"category\">\n                    <mat-option *ngFor=\"let cat of keys\" [value]=\"cat\">{{categoryList[cat]}}</mat-option>\n                </mat-select>\n                <mat-error>Category is required !</mat-error>\n            </mat-form-field>\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Price</mat-label>\n                <input type=\"number\" matInput formControlName=\"price\" min=\"1\" required>\n                <mat-error *ngIf=\"addCouponForm.controls['price'].errors?.required\">Price is required</mat-error>\n                <mat-error *ngIf=\"addCouponForm.controls['price'].errors?.min\">Price must be above 0</mat-error>\n            </mat-form-field>\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Amount</mat-label>\n                <input type=\"number\" matInput formControlName=\"amount\" min=\"1\" required>\n                <mat-error *ngIf=\"addCouponForm.controls['amount'].errors?.required\">Amount is required</mat-error>\n                <mat-error *ngIf=\"addCouponForm.controls['amount'].errors?.min\">Amount must be above 0</mat-error>\n            </mat-form-field><br>\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Start Date</mat-label>\n                <input type=\"date\" matInput formControlName=\"startDate\" [min]=\"today.toJSON().split('T')[0]\" required>\n                <mat-error *ngIf=\"addCouponForm.controls['startDate'].errors?.required\">Start Date is required !</mat-error>\n                <mat-error *ngIf=\"addCouponForm.controls['startDate'].errors?.pastError\">start date cannot be in the past</mat-error>\n            </mat-form-field>\n            <mat-form-field appearance=\"outline\">\n                <mat-label>End Date</mat-label>\n                <input type=\"date\" matInput formControlName=\"endDate\" [min]=\"addCouponForm.controls['startDate'].value\"\n                required>\n                <mat-error *ngIf=\"addCouponForm.controls['endDate'].errors?.required\">End Date is required !</mat-error>\n                <mat-error *ngIf=\"addCouponForm.controls['endDate'].errors?.eDateError\">End Date cannot be before startDate !</mat-error>\n            </mat-form-field><br>\n            <mat-form-field appearance=\"outline\" style=\"width: 500px;\">\n                <mat-label>Description</mat-label>\n                <textarea matInput formControlName=\"description\" placeholder=\"describe it...\" required></textarea>\n                <mat-error>Description is required !</mat-error>\n            </mat-form-field><br>\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Image</mat-label>\n                <input type=\"text\" matInput maxlength=\"255\" formControlName=\"image\">\n            </mat-form-field><br>\n            <button mat-raised-button [disabled]=\"!addCouponForm.valid\" (click)=\"addCoupon()\">Add Coupon</button>\n            <br><br>\n        </form>\n    </mat-tab>\n</mat-tab-group>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AdminComponent } from './components/admin/admin.component';\nimport { CompanyComponent } from './components/company/company.component';\nimport { CustomerComponent } from './components/customer/customer.component';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { HomeComponent } from './components/home/home.component';\n\n\nconst routes: Routes = [\n  { path: \"main\", component: HomeComponent},\n  { path: \"admin\", component: AdminComponent },\n  { path: \"company\", component: CompanyComponent },\n  { path: \"customer\", component: CustomerComponent },\n  { path: \"\", redirectTo: \"main\", pathMatch: \"full\" },\n  { path: \"**\", component: NotFoundComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Customer } from 'src/app/models/customer';\nimport { AdminService } from 'src/app/services/admin.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-update-customer',\n  templateUrl: './update-customer.component.html',\n  styleUrls: ['./update-customer.component.css']\n})\nexport class UpdateCustomerComponent implements OnInit {\n\n  customer:Customer;\n\n  updateCustomerForm:FormGroup;\n\n  messageForUser:string;\n  \n  constructor(private dialogRef: MatDialogRef<UpdateCustomerComponent>,\n    @Inject(MAT_DIALOG_DATA) data,private fb:FormBuilder, private service:AdminService, private snack:MatSnackBar) {this.customer = data.dataToSend }\n\n  ngOnInit(): void {\n    this.updateCustomerForm =this.fb.group({\n      firstName:[this.customer.firstName,Validators.required],\n      lastName:[this.customer.lastName,Validators.required],\n      email:[this.customer.email,[Validators.required,Validators.email]],\n      password: [this.customer.password,Validators.required]\n    });\n  }\n\n    updateCustomer() {\n      let customer = new Customer(this.customer.id,this.updateCustomerForm.controls['firstName'].value,\n      this.updateCustomerForm.controls['lastName'].value,this.updateCustomerForm.controls['email'].value,\n      this.updateCustomerForm.controls['password'].value,this.customer.coupons);\n      this.service.updateCustomer(customer).subscribe((res) => {\n        this.messageForUser = res;\n        this.showSnack();\n        this.dialogRef.close(customer);\n      }, (err) => {\n        alert(err.error);\n      });\n    }\n\n    showSnack() {\n      let snackRef = this.snack.open(this.messageForUser, \"close\", { duration: 2000 });\n      snackRef.onAction().subscribe(() => {\n        //do your stuff here !\n        this.snack.dismiss();\n      })\n    }\n\n}\n","<div>\n    <h2>Update a Customer - {{customer.firstName}} {{customer.lastName}}</h2>\n    <form [formGroup]=\"updateCustomerForm\" >\n        <mat-form-field appearance =\"outline\">\n            <mat-label>First Name</mat-label>\n            <input type=\"text\" matInput formControlName=\"firstName\" required>\n            <mat-error>First Name is required !</mat-error>\n        </mat-form-field>\n        <mat-form-field appearance =\"outline\">\n            <mat-label>Last Name</mat-label>\n            <input type=\"text\" matInput formControlName=\"lastName\" required>\n            <mat-error>Last Name is required !</mat-error>\n        </mat-form-field>\n        <mat-form-field appearance =\"outline\">\n            <mat-label>Email</mat-label>\n            <input type=\"text\" matInput formControlName=\"email\" required>\n            <mat-error *ngIf=\"updateCustomerForm.controls['email'].errors?.required\">Email is required !</mat-error>\n            <mat-error *ngIf=\"updateCustomerForm.controls['email'].errors?.email\">Email is not legit !</mat-error>\n        </mat-form-field>\n        <mat-form-field appearance=\"outline\">\n            <mat-label>Password</mat-label>\n            <input type=\"text\" matInput formControlName=\"password\" required>\n            <mat-error>Password is required !</mat-error>\n        </mat-form-field><br>\n        <button mat-raised-button [disabled]=\"!updateCustomerForm.valid\" (click)=\"updateCustomer()\">Update !</button>\n        <br><br>\n    </form>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { Category } from 'src/app/models/category.enum';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Coupon } from 'src/app/models/coupon';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { CompanyService } from 'src/app/services/company.service';\nimport { ImageDialogComponent } from '../../image-dialog/image-dialog.component';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n\n@Component({\n  selector: 'app-update-coupon2',\n  templateUrl: './update-coupon2.component.html',\n  styleUrls: ['./update-coupon2.component.css']\n})\nexport class UpdateCoupon2Component implements OnInit {\n\n  constructor(\n    private dialogRef: MatDialogRef<UpdateCoupon2Component>,\n    @Inject(MAT_DIALOG_DATA) data,\n    private service: CompanyService,\n    private fb: FormBuilder,\n    private snack:MatSnackBar\n    ) { this.coupon = data.dataToSend }\n\n  coupon: Coupon;\n\n  updateCouponForm: FormGroup;\n\n  updateCouponMessage: string;\n\n  defaultImage: string = \"assets/placeholder-image.jpg\";\n\n  today: string = new Date().toJSON().split('T')[0];\n\n  ngOnInit(): void {\n    this.updateCouponForm = this.fb.group({\n      title: [this.coupon.title, Validators.required],\n      description: [this.coupon.description, Validators.required],\n      price: [this.coupon.price, [Validators.required, Validators.min(1)]],\n      startDate: [this.coupon.startDate, Validators.required],\n      endDate: [this.coupon.endDate, Validators.required],\n      amount: [this.coupon.amount, [Validators.required, Validators.min(1)]],\n      image: [this.coupon.image]\n    });\n  }\n\n  updateCoupon() {\n    let startDate = this.updateCouponForm.controls['startDate'].value;\n    if (startDate < this.today) {\n      alert('can not pick a start date before today !')\n      return;\n    }\n    let endDate = this.updateCouponForm.controls['endDate'].value;\n    if (endDate < startDate) {\n      alert('can not pick an end date sooner than the start date !')\n      return;\n    }\n    let image = this.updateCouponForm.controls['image'].value;\n    if (image == null || image == '' || image == undefined) { image = this.defaultImage }\n    let coupon = new Coupon(this.coupon.id,this.updateCouponForm.controls['title'].value,this.coupon.category,\n    this.updateCouponForm.controls['description'].value,this.updateCouponForm.controls['price'].value,this.coupon.company,\n    startDate,endDate,this.updateCouponForm.controls['amount'].value,\n    image);\n    this.service.updateCoupon(coupon).subscribe((res) => {\n      this.coupon = coupon;\n      this.updateCouponMessage = res;\n      this.showSnack();\n      this.dialogRef.close(coupon);\n    }, (err) => {\n      this.updateCouponMessage = err.error;\n      alert(err.error);\n      console.log(err.error);\n    })\n\n  }\n\n  close() {\n    this.dialogRef.close();\n  }\n\n  showSnack() {\n    let snackRef = this.snack.open(this.updateCouponMessage, \"close\", { duration: 2000 });\n    snackRef.onAction().subscribe(() => {\n      //do your stuff here !\n      this.snack.dismiss();\n    })\n  }\n\n \n\n}\n","<h2 mat-dialog-title>Update a Coupon - <span>{{coupon.title}}</span></h2>\n<mat-dialog-content [formGroup]=\"updateCouponForm\">\n    <mat-form-field appearance=\"outline\">\n        <mat-label>Title</mat-label>\n        <input type=\"text\" matInput formControlName=\"title\" required>\n        <mat-error>Title is required !</mat-error>\n    </mat-form-field>\n    <mat-form-field appearance=\"outline\">\n        <mat-label>Price</mat-label>\n        <input type=\"number\" matInput formControlName=\"price\" min=\"1\" required>\n        <mat-error *ngIf=\"updateCouponForm.controls['price'].errors?.required\">Price is required</mat-error>\n        <mat-error *ngIf=\"updateCouponForm.controls['price'].errors?.min\">Price must be above 0</mat-error>\n    </mat-form-field>\n    <mat-form-field appearance=\"outline\">\n        <mat-label>Amount</mat-label>\n        <input type=\"number\" matInput formControlName=\"amount\" min=\"1\" required>\n        <mat-error *ngIf=\"updateCouponForm.controls['amount'].errors?.required\">Amount is required</mat-error>\n        <mat-error *ngIf=\"updateCouponForm.controls['amount'].errors?.min\">Amount must be above 0</mat-error>\n    </mat-form-field><br>\n    <mat-form-field appearance=\"outline\">\n        <mat-label>Start Date</mat-label>\n        <input type=\"date\" matInput formControlName=\"startDate\" [min]=\"today\" required>\n        <mat-error>Start Date is required !</mat-error>\n    </mat-form-field>\n    <mat-form-field appearance=\"outline\">\n        <mat-label>End Date</mat-label>\n        <input type=\"date\" matInput formControlName=\"endDate\" [min]=\"updateCouponForm.controls['startDate'].value\" required>\n        <mat-error>End Date is required !</mat-error>\n    </mat-form-field><br>\n    <mat-form-field appearance=\"outline\" style=\"width: 500px;\">\n        <mat-label>Description</mat-label>\n        <textarea matInput formControlName=\"description\" required placeholder=\"describe it...\"></textarea>\n        <mat-error>Description is required !</mat-error>\n    </mat-form-field><br>\n    <mat-form-field appearance=\"outline\">\n        <mat-label>Image</mat-label>\n        <input type=\"text\" matInput maxlength=\"255\" formControlName=\"image\">\n        <mat-hint>max 255 chars</mat-hint>\n    </mat-form-field>\n    <span>{{updateCouponMessage}}</span><br>\n    <br><br>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <button type=\"submit\" mat-raised-button [disabled]=\"!updateCouponForm.valid\" (click)=\"updateCoupon()\">Update\n        !</button>\n    <button mat-raised-button (click)=\"close()\">Back</button>\n</mat-dialog-actions>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}